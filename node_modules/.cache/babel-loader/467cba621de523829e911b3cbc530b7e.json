{"ast":null,"code":"import _slicedToArray from\"C:/Users/landr/Dropbox/Requisite Designs's shared workspace/__Resources/_GameDevelopment/_Projects/ToolShed/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{Button,Modal}from\"react-bootstrap\";import{Link}from\"react-router-dom\";import ClipboardCopy from'./ClipboardCopy';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function parseConfig2(fqdnArray){var fqdnList=fqdnArray.split(\"\\n\");var ret=fqdnList.map(function(e){return'edit 0\\nset url \"'+e+'\"\\nset type wildcard\\nset action allow\\nnext\\n';}).join(\"\");return'config webfilter urlfilter\\nedit 2\\nset name \"Environment_URL_Filter\"\\nconfig entries\\n'+ret+\"end\";}function FortigateWhitelistToolFQDN(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShow=_useState2[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){return setShow(true);};var handleShowSettings=function handleShowSettings(){return setShow(true);};var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),fqdnList=_useState4[0],setFqdnList=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),output=_useState6[0],setOutput=_useState6[1];var handleChange=function handleChange(e){if(e.target.value){setFqdnList(e.target.value);setOutput(parseConfig2(e.target.value));}else{setOutput(\"\");setFqdnList(\"\");}};var handleOutput=function handleOutput(e){// setOutput(parseConfig2(fqdnList))\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"appContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"appTitle\",children:\"WhiteListing Tool\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{className:\"subTitle\",children:\"This tool will generate the configuration input required to apply a new URL to an existing Fortigate Content Filter. Input a list of FQDN's on the left text area and the right will auto-populate with the template. Each FQDN must be on a line of its own.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{variant:\"info\",className:\"navLinks\",onClick:handleShow,children:/*#__PURE__*/_jsx(\"li\",{children:\"Whitelist\"})})]}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:handleClose,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Whitelist Config Generator\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"FQDN Input\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"textFields\",value:fqdnList,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Configuration\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"textFields\",value:output,onChange:handleOutput})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:handleClose,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{variant:\"info\",disabled:true,children:\"Copy to Clipboard\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"backButton\",children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",className:\"navLinks\",disabled:true,children:/*#__PURE__*/_jsx(\"li\",{children:\"Settings\"})}),/*#__PURE__*/_jsx(Link,{to:\"/vendor/fortigate\",children:/*#__PURE__*/_jsx(Button,{className:\"navLinks\",variant:\"info\",children:/*#__PURE__*/_jsx(\"li\",{children:\"Back\"})})})]})]});}export default FortigateWhitelistToolFQDN;","map":{"version":3,"sources":["C:/Users/landr/Dropbox/Requisite Designs's shared workspace/__Resources/_GameDevelopment/_Projects/ToolShed/src/components/FortigateWhitelistToolFQDN.js"],"names":["React","useState","Button","Modal","Link","ClipboardCopy","parseConfig2","fqdnArray","fqdnList","split","ret","map","e","join","FortigateWhitelistToolFQDN","showModal","setShow","handleClose","handleShow","handleShowSettings","setFqdnList","output","setOutput","handleChange","target","value","handleOutput"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { Button, Modal } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ClipboardCopy from './ClipboardCopy'\r\n\r\nfunction parseConfig2(fqdnArray) {\r\n  var fqdnList = fqdnArray.split(\"\\n\")\r\n  var ret = fqdnList\r\n    .map((e) => {\r\n      return 'edit 0\\nset url \"' + e + '\"\\nset type wildcard\\nset action allow\\nnext\\n'\r\n    })\r\n    .join(\"\")\r\n  return 'config webfilter urlfilter\\nedit 2\\nset name \"Environment_URL_Filter\"\\nconfig entries\\n' + ret + \"end\"\r\n  \r\n}\r\n\r\nfunction FortigateWhitelistToolFQDN() {\r\n  var [showModal, setShow] = useState(true)\r\n  var handleClose = () => setShow(false)\r\n  var handleShow = () => setShow(true)\r\n  var handleShowSettings = () => setShow(true)\r\n  var [fqdnList, setFqdnList] = useState(\"\")\r\n  var [output, setOutput] = useState(\"\")\r\n  \r\n  var handleChange = (e) => { \r\n    if (e.target.value) {\r\n      setFqdnList(e.target.value);\r\n      setOutput(parseConfig2(e.target.value));\r\n    } else {\r\n      setOutput(\"\");\r\n      setFqdnList(\"\");\r\n    }\r\n  }\r\n\r\n  \r\n  var handleOutput = (e) => {\r\n    // setOutput(parseConfig2(fqdnList))\r\n  }\r\n\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <div>\r\n        <h1 className=\"appTitle\">WhiteListing Tool</h1> <br />\r\n        <p className=\"subTitle\">This tool will generate the configuration input required to apply a new URL to an existing Fortigate Content Filter. Input a list of FQDN's on the left text area and the right will auto-populate with the template. Each FQDN must be on a line of its own.</p>\r\n        <br />\r\n        <Button variant=\"info\" className=\"navLinks\" onClick={handleShow}>\r\n          <li>Whitelist</li>\r\n        </Button>\r\n      </div>\r\n\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Whitelist Config Generator</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <label>FQDN Input</label>\r\n              <textarea className=\"textFields\" value={fqdnList} onChange={handleChange}></textarea>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <label>Configuration</label>\r\n              <textarea className=\"textFields\" value={output} onChange={handleOutput}></textarea>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"info\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"info\" disabled>\r\n            Copy to Clipboard\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"backButton\">\r\n          <Button variant=\"secondary\" className=\"navLinks\" disabled>\r\n            <li>Settings</li>\r\n          </Button>\r\n        <Link to=\"/vendor/fortigate\">\r\n          <Button className=\"navLinks\" variant=\"info\">\r\n            <li>Back</li>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FortigateWhitelistToolFQDN\r\n"]},"metadata":{},"sourceType":"module"}