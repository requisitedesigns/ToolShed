{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landr\\\\Dropbox\\\\Requisite Designs's shared workspace\\\\__Resources\\\\_GameDevelopment\\\\_Projects\\\\ToolShed\\\\src\\\\components\\\\FortigateFWRule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction handleCopy(textArea) {\n  navigator.clipboard.writeText(textArea);\n}\n\nfunction FortigateFWRule() {\n  _s();\n\n  /* State Controls */\n  var [showModal, setShow] = useState(true);\n\n  var handleClose = () => setShow(false);\n\n  var handleShow = () => setShow(true);\n\n  var handleShowSettings = () => setShow(true);\n\n  var [state, setState] = useState({\n    portCreationReq: \"\",\n    protocolList: \"undefined\",\n    existingPorts: \"\",\n    addServiceGroup: \"undefined\",\n    portsList: \"\",\n    multiVdomQuestion: \"undefined\",\n    fwRuleName: \"\",\n    allowOrDeny: \"\"\n  });\n\n  var handleChange = e => {\n    var value = e.target.value;\n    setState({ ...state,\n      [e.target.name]: value\n    });\n  };\n  /* End State Controls */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"fortigateFWrule\",\n    className: \"appContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"appTitle\",\n        children: \"FW Rule Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subTitle\",\n        children: \"This tool will generate the configuration necessary for Fortigate Firewall Policy creation. This will create a policy based on the variables provided in \\\"Settings\\\". \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        className: \"navLinks\",\n        onClick: handleShow,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"FW Rule Gen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      id: \"fwRuleModal\",\n      show: showModal,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"FW Rule Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"fwRuleForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Firewall Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Will this be a multi-VDOM policy?\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"multiVdomQuestion\",\n                value: state.multiVdomQuestion,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"undefined\",\n                  children: \"-- Please Choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"multiVdomYes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"multiVdomNo\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), state.multiVdomQuestion === 'multiVdomYes' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                name: \"vdomTotal\",\n                children: [\"Please advise the total number of VDOMs required for the new policy.\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"vdomTotal\",\n                  onChange: handleChange,\n                  value: state.vdomTotal,\n                  type: \"text\",\n                  placeholder: \"Example: 35\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 91\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                name: \"vdomName\",\n                children: [\"VDOM Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"vdomName\",\n                  type: \"text\",\n                  placeholder: \"Example: Customer-VDOM-355\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), state.multiVdomQuestion !== 'undefined' && /*#__PURE__*/_jsxDEV(\"label\", {\n              name: \"fwRuleName\",\n              children: [\"Firewall Policy Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"fwRuleName\",\n                type: \"text\",\n                value: state.fwRuleName,\n                onChange: handleChange,\n                placeholder: \"Example: Windows-Update-Service\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), state.fwRuleName !== '' && /*#__PURE__*/_jsxDEV(\"label\", {\n              name: \"allowOrDeny\",\n              children: [\"Please advise if this is to allow or deny traffic.\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"allowOrDeny\",\n                value: state.allowOrDeny,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"undefined\",\n                  children: \"-- Please Choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"allowRule\",\n                  children: \"Allow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"denyRule\",\n                  children: \"Deny\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), state.allowOrDeny !== '' && /*#__PURE__*/_jsxDEV(\"label\", {\n              name: \"portCreationReqL\",\n              children: [\"Do you require a new custom service port or port group?\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"portCreationReq\",\n                value: state.portCreationReq,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"undefined\",\n                  children: \"-- Please Choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"true\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"false\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), state.portCreationReq === 'false' && /*#__PURE__*/_jsxDEV(\"label\", {\n              name: \"existingPortsL\",\n              children: [\"Please provide the name of the service group or port name you want to use:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"existingPorts\",\n                type: \"text\",\n                placeholder: \"Example: WSUS-Ports\",\n                value: state.existingPorts,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 91\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this) || state.portCreationReq === 'true' && /*#__PURE__*/_jsxDEV(\"label\", {\n              name: \"protocolListL\",\n              children: [\"TCP, UDP, or Both?\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"protocolList\",\n                value: state.protocolList,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"undefined\",\n                  children: \"-- Please Choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"tcpTrue\",\n                  children: \"TCP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"udpTrue\",\n                  children: \"UDP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bothTrue\",\n                  children: \"Both\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"mixedTrue\",\n                  children: \"Mixed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this) || /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), state.protocolList !== 'undefined' && /*#__PURE__*/_jsxDEV(\"label\", {\n              name: \"addServiceGroupL\",\n              children: [\"Would you like these ports to be added to a Service Group or as one individual service?\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"addServiceGroup\",\n                value: state.addServiceGroup,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"undefined\",\n                  children: \"-- Please Choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"srvGrpYes\",\n                  children: \"Group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"srvGrpNo\",\n                  children: \"Individual\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this) || /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), state.addServiceGroup !== 'undefined' && /*#__PURE__*/_jsxDEV(\"label\", {\n              name: \"portsListL\",\n              children: [\"Comma Separated Ports, Hyphen for Range:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"portsList\",\n                value: state.portsList,\n                onChange: handleChange,\n                type: \"text\",\n                placeholder: \"Example: 1550, 1650, 1300-1301, 20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this) || /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleCopy(\"\"),\n          children: \"Copy to Clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"backButton\",\n      className: \"backButton\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/vendor/fortigate/fw-rule-gen/settings\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          className: \"navLinks\",\n          onClick: handleShowSettings,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/vendor/fortigate\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"navLinks\",\n          variant: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FortigateFWRule, \"NxHl35Cuv1JvAg2mlcwJVKxfXy0=\");\n\n_c = FortigateFWRule;\nexport default FortigateFWRule;\n/* \r\n\r\nFeatures To Be Created:\r\n\r\n1. Create \"Settings\"\r\n    Create a settings button that allows the user to provide input that will reflect in the config output.\r\n\r\n2. Create a slider to push to multiple VDOMs\r\n\r\n3. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n===== ORIGINAL CODE =====\r\n            <div class=\"col_2\">\r\n                <h2>Firewall Rule Skeleton</h2>\r\n                <button onclick=\"parseConfigFW()\">Create FW Rule</button>\r\n                <textarea id=\"fscRuleSkeleton\"></textarea>\r\n            </div>\r\n\r\n\r\n        function parseConfigFW() {\r\n\r\n            if (rulePortTCPUDP == \"TCP\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset tcp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else if (rulePortTCPUDP == \"UDP\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset udp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else if (rulePortTCPUDP == \"BOTH\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset udp-portrange \" + rulePortRange + \"\\nset tcp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else {\r\n                newPort = prompt(\"Please enter TCP or UDP in caps only\");\r\n            }\r\n            for (a = 1; a < 37; a++) {\r\n                fscNumLoop = a;\r\n                var fwRule = \"edit vdom-000\" + (fscNumLoop < 10 ? \"0\" : \"\") + fscNumLoop + newPort + \"\\nconfig firewall policy\\n\";\r\n                fwRule = fwRule + \"edit 0\\nset name \\\"\" + ruleName + \"\\\"\\nset srcintf \\\"VDOM-INT\" + fscNumLoop + \"_01\\\"\\nset dstintf \\\"A_Zone\\\" \\\"B_Zone\\\"\\nset srcaddr \\\"all\\\"\\nset dstaddr \\\"all-2\\\"\\nset action accept\\nset schedule \\\"always\\\"\\nset service \\\"\" + portName + \"\\\"\\nset utm-status enable\\nset status enable\\nset comments \\\"\" + ruleName + \"\\\"\\nend\";\r\n                console.log(\"fwRule = \" + fwRule);\r\n                pushOutputFWSkeleton.push(fwRule);\r\n            }\r\n            document.getElementById(\"fscRuleSkeleton\").value = pushOutputFWSkeleton.join(\"\\nnext\\n\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"FortigateFWRule\");","map":{"version":3,"sources":["C:/Users/landr/Dropbox/Requisite Designs's shared workspace/__Resources/_GameDevelopment/_Projects/ToolShed/src/components/FortigateFWRule.js"],"names":["React","useState","Button","Modal","Link","handleCopy","textArea","navigator","clipboard","writeText","FortigateFWRule","showModal","setShow","handleClose","handleShow","handleShowSettings","state","setState","portCreationReq","protocolList","existingPorts","addServiceGroup","portsList","multiVdomQuestion","fwRuleName","allowOrDeny","handleChange","e","value","target","name","vdomTotal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { Button, Modal } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction handleCopy(textArea) {\r\n  navigator.clipboard.writeText(textArea)\r\n}\r\n\r\nfunction FortigateFWRule() {\r\n  /* State Controls */\r\n  var [showModal, setShow] = useState(true)\r\n  var handleClose = () => setShow(false)\r\n  var handleShow = () => setShow(true)\r\n  var handleShowSettings = () => setShow(true)\r\n\r\n  var [state, setState] = useState({\r\n    portCreationReq: \"\",\r\n    protocolList: \"undefined\",\r\n    existingPorts: \"\",\r\n    addServiceGroup: \"undefined\",\r\n    portsList: \"\",\r\n    multiVdomQuestion: \"undefined\",\r\n    fwRuleName: \"\",\r\n    allowOrDeny: \"\",\r\n  })\r\n\r\n  var handleChange = (e) => {\r\n    var value = e.target.value\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value,\r\n    })\r\n  }\r\n  /* End State Controls */\r\n\r\n  return (\r\n    <div id=\"fortigateFWrule\" className=\"appContainer\">\r\n      <div>\r\n        <h1 className=\"appTitle\">FW Rule Generator</h1> <br />\r\n        <p className=\"subTitle\">This tool will generate the configuration necessary for Fortigate Firewall Policy creation. This will create a policy based on the variables provided in \"Settings\". </p>\r\n        <br />\r\n        <Button variant=\"info\" className=\"navLinks\" onClick={handleShow}>\r\n          <li>FW Rule Gen</li>\r\n        </Button>\r\n      </div>\r\n\r\n      <Modal id=\"fwRuleModal\" show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>FW Rule Generator</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <form id=\"fwRuleForm\">\r\n              <label>\r\n                Firewall Request\r\n              </label>\r\n              <label>\r\n                Will this be a multi-VDOM policy?\r\n                <select name=\"multiVdomQuestion\" value={state.multiVdomQuestion} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"multiVdomYes\">Yes</option>\r\n                  <option value=\"multiVdomNo\">No</option>\r\n                </select>\r\n              </label>\r\n\r\n            {(state.multiVdomQuestion === 'multiVdomYes' &&\r\n                    <>\r\n                    <label name=\"vdomTotal\">\r\n                      Please advise the total number of VDOMs required for the new policy.<input name=\"vdomTotal\" onChange={handleChange} value={state.vdomTotal} type=\"text\" placeholder=\"Example: 35\"></input>\r\n                    </label>\r\n                    <label name=\"vdomName\">\r\n                      VDOM Name:<input name=\"vdomName\" type=\"text\" placeholder=\"Example: Customer-VDOM-355\"></input>\r\n                    </label>\r\n                    </> \r\n                  )}\r\n            {(state.multiVdomQuestion !== 'undefined' &&               \r\n              <label name=\"fwRuleName\">\r\n                Firewall Policy Name:<input name=\"fwRuleName\" type=\"text\" value={state.fwRuleName} onChange={handleChange} placeholder=\"Example: Windows-Update-Service\"></input>\r\n              </label>\r\n              )}\r\n\r\n            {( state.fwRuleName !== '' && \r\n              <label name=\"allowOrDeny\">\r\n                  Please advise if this is to allow or deny traffic.\r\n                <select name=\"allowOrDeny\" value={state.allowOrDeny} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"allowRule\">Allow</option>\r\n                  <option value=\"denyRule\">Deny</option>\r\n                </select>\r\n              </label>\r\n            )}\r\n            \r\n            {(state.allowOrDeny !== '' && \r\n                <label name=\"portCreationReqL\">\r\n                Do you require a new custom service port or port group?\r\n                <select name=\"portCreationReq\" value={state.portCreationReq} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>\r\n            )}\r\n\r\n              \r\n             { (state.portCreationReq === 'false' &&                   \r\n              <label name=\"existingPortsL\">\r\n                Please provide the name of the service group or port name you want to use:<input name=\"existingPorts\" type=\"text\" placeholder=\"Example: WSUS-Ports\" value={state.existingPorts} onChange={handleChange}></input>\r\n              </label> )\r\n              \r\n              ||\r\n            \r\n              (state.portCreationReq === 'true' &&\r\n                  <label name=\"protocolListL\">\r\n                    TCP, UDP, or Both?\r\n                    <select name=\"protocolList\" value={state.protocolList} onChange={handleChange}>\r\n                      <option value=\"undefined\">-- Please Choose</option>\r\n                      <option value=\"tcpTrue\">TCP</option>\r\n                      <option value=\"udpTrue\">UDP</option>\r\n                      <option value=\"bothTrue\">Both</option>\r\n                      <option value=\"mixedTrue\">Mixed</option>\r\n                    </select>\r\n                  </label> )\r\n                || ( <></> )}\r\n\r\n                {(state.protocolList !== 'undefined' &&                  \r\n                <label name=\"addServiceGroupL\">\r\n                  Would you like these ports to be added to a Service Group or as one individual service?\r\n                    <select name=\"addServiceGroup\" value={state.addServiceGroup} onChange={handleChange}>\r\n                      <option value=\"undefined\">-- Please Choose</option>\r\n                      <option value=\"srvGrpYes\">Group</option>\r\n                      <option value=\"srvGrpNo\">Individual</option>\r\n                    </select>\r\n                  </label>) || (<></>)}\r\n\r\n                {(state.addServiceGroup !== 'undefined' && \r\n                <label name=\"portsListL\">\r\n                    Comma Separated Ports, Hyphen for Range:<input name=\"portsList\" value={state.portsList} onChange={handleChange} type=\"text\" placeholder=\"Example: 1550, 1650, 1300-1301, 20\">\r\n                    </input>\r\n                </label> ) || (<></>)}\r\n                  \r\n               {/*\r\n              <label name=\"srcIntfName\">\r\n                What is the Source Interface Name? (srcintf):<input name=\"srcIntfName\" type=\"text\" placeholder=\"Example: Inside_Vlan\"></input>\r\n              </label>\r\n              <label name=\"dstIntfName\">\r\n                What is the Destination Interface Name? (dstintf):<input name=\"dstIntfName\" type=\"text\" placeholder=\"Example: Outside_Vlan\"></input>\r\n              </label>\r\n              <label name=\"newSrcObjReq\">\r\n                Do the source address IP objects exist currently?\r\n                <select name=\"newSrcObjReq\" onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"srcYes\">Yes</option>\r\n                  <option value=\"srcNo\">No</option>\r\n                </select>\r\n              </label>\r\n              <label name=\"newSrcObjList\">\r\n                Please provide the name of the existing Source IP Object(s), Object-Groups (one per line w/quotes around them)?\r\n                <textarea className=\"textFields\" name=\"newSrcObjList\"></textarea>\r\n              </label>\r\n              <label name=\"newSrcObjGrpReq\">\r\n                Would you like to create a new object group for the Source IPs?\r\n                <select name=\"newSrcObjGrpReq\">\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>\r\n              <label name=\"newDstObjReq\">\r\n                Do the destination address IP objects exist currently?\r\n                <select name=\"newDstObjReq\">\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>\r\n              <label name=\"newDestIpList\">\r\n                Please provide the name of the existing Destination IP Object(s), Object-Groups (one per line w/quotes around them)?\r\n                <textarea className=\"textFields\" name=\"newDestIpList\"></textarea>\r\n              </label>\r\n              <label name=\"newDstObjGrpReq\">\r\n                Would you like to create a new object group for the Destination IPs?\r\n                <select name=\"newDstObjGrpReq\">\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>\r\n              <label name=\"ruleEnabled\">\r\n                Would you like the rule enabled upon entry?\r\n                <select name=\"ruleEnabled\">\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>\r\n              <label name=\"ruleDescription\">\r\n                Please provide a description of the rule under 28 characters:<input name=\"ruleDescription\" type=\"text\" placeholder=\"Example: WSUS Inside_Vlan to Outside_Vlan\"></input>\r\n              </label> */}\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"info\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"info\" onClick={handleCopy(\"\")}>\r\n            Copy to Clipboard\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div id=\"backButton\" className=\"backButton\">\r\n      <Link to=\"/vendor/fortigate/fw-rule-gen/settings\">\r\n          <Button variant=\"info\" className=\"navLinks\" onClick={handleShowSettings}>\r\n            <li>Settings</li>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/vendor/fortigate\">\r\n          <Button className=\"navLinks\" variant=\"info\">\r\n            <li>Back</li>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FortigateFWRule\r\n\r\n/* \r\n\r\nFeatures To Be Created:\r\n\r\n1. Create \"Settings\"\r\n    Create a settings button that allows the user to provide input that will reflect in the config output.\r\n\r\n2. Create a slider to push to multiple VDOMs\r\n\r\n3. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n===== ORIGINAL CODE =====\r\n            <div class=\"col_2\">\r\n                <h2>Firewall Rule Skeleton</h2>\r\n                <button onclick=\"parseConfigFW()\">Create FW Rule</button>\r\n                <textarea id=\"fscRuleSkeleton\"></textarea>\r\n            </div>\r\n\r\n\r\n        function parseConfigFW() {\r\n\r\n            if (rulePortTCPUDP == \"TCP\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset tcp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else if (rulePortTCPUDP == \"UDP\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset udp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else if (rulePortTCPUDP == \"BOTH\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset udp-portrange \" + rulePortRange + \"\\nset tcp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else {\r\n                newPort = prompt(\"Please enter TCP or UDP in caps only\");\r\n            }\r\n            for (a = 1; a < 37; a++) {\r\n                fscNumLoop = a;\r\n                var fwRule = \"edit vdom-000\" + (fscNumLoop < 10 ? \"0\" : \"\") + fscNumLoop + newPort + \"\\nconfig firewall policy\\n\";\r\n                fwRule = fwRule + \"edit 0\\nset name \\\"\" + ruleName + \"\\\"\\nset srcintf \\\"VDOM-INT\" + fscNumLoop + \"_01\\\"\\nset dstintf \\\"A_Zone\\\" \\\"B_Zone\\\"\\nset srcaddr \\\"all\\\"\\nset dstaddr \\\"all-2\\\"\\nset action accept\\nset schedule \\\"always\\\"\\nset service \\\"\" + portName + \"\\\"\\nset utm-status enable\\nset status enable\\nset comments \\\"\" + ruleName + \"\\\"\\nend\";\r\n                console.log(\"fwRule = \" + fwRule);\r\n                pushOutputFWSkeleton.push(fwRule);\r\n            }\r\n            document.getElementById(\"fscRuleSkeleton\").value = pushOutputFWSkeleton.join(\"\\nnext\\n\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}