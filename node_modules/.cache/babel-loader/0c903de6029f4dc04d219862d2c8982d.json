{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landr\\\\Dropbox\\\\Requisite Designs's shared workspace\\\\__Resources\\\\_GameDevelopment\\\\_Projects\\\\ToolShed\\\\src\\\\components\\\\FortigateWhitelistToolFQDN.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\"; //import ModalNew from './ModalNew'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction parseConfig2(fqdnArray) {\n  var fqdnList = fqdnArray.split(\"\\n\"); //  var pushFQDN = [\"config webfilter urlfilter\\nedit 2\\nset name \\\"Environment_URL_Filter\\\"\\nconfig entries\\n\"];\n\n  var ret = fqdnList.map(e => {\n    return 'edit 0\\nset url \"' + e + '\"\\nset type wildcard\\nset action allow\\nnext\\n';\n  }).join(\"\");\n  return 'config webfilter urlfilter\\nedit 2\\nset name \"Environment_URL_Filter\"\\nconfig entries\\n' + ret; //return fqdnList.join(\"block\");\n}\n\nfunction handleCopy(handleOutput) {\n  navigator.clipboard.writeText(handleOutput);\n  console.log(handleOutput);\n}\n\nfunction FortigateWhitelistToolFQDN() {\n  _s();\n\n  var [showModal, setShow] = useState(true);\n\n  var handleClose = () => setShow(false);\n\n  var handleShow = () => setShow(true);\n\n  var [fqdnList, setFqdnList] = useState(\"\");\n  var [output, setOutput] = useState(\"\");\n\n  var handleChange = e => {\n    setFqdnList(e.target.value);\n    setOutput(parseConfig2(fqdnList));\n  };\n\n  var handleOutput = e => {\n    setOutput(parseConfig2(fqdnList));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"appTitle\",\n        children: \"FortiWhiteList Config Gen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subTitle\",\n        children: \"This tool will generate the configuration input required to apply a new URL to an existing Fortigate Content Filter. Input a list of FQDN's on the left text area and the right will auto-populate with the template. You must drop down a line after each FQDN including the last one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"info\",\n      className: \"navLinks\",\n      onClick: handleShow,\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Whitelist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Whitelist Config Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"FQDN Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"textFields\",\n              value: fqdnList,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Configuration Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"textFields\",\n              value: output,\n              onChange: handleOutput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleCopy,\n          children: \"Copy to Clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backButton\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/vendor/fortigate\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"navLinks\",\n          variant: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FortigateWhitelistToolFQDN, \"QNlANYfuj6g/Z1G4wPbvg5UfW9Y=\");\n\n_c = FortigateWhitelistToolFQDN;\nexport default FortigateWhitelistToolFQDN;\n/* \r\n\r\nAll document.getElementById's \r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\n//    var fqdnList = document.getElementById(\"configInput\").value.split(\"\\n\");\n//    var pushFQDN = [\"config webfilter urlfilter\\nedit 2\\nset name \\\"Environment_URL_Filter\\\"\\nconfig entries\\n\"];\n//    for (i = 0; i < fqdnList.length; i++) {\n//      var y = \"edit 0\\nset url \\\"\" + fqdnList[i] + \"\\\"\\nset type wildcard\\nset action allow\\nnext\\n\";\n//        pushFQDN.push(y);\n//    }\n//    document.getElementById(\"configOutput\").value = pushFQDN.join(\"\");\n//var fqdnInput = configInput.value;\n//const [value, setValue] = useState(props.name);\n//const handleChange = (event) => {\n//    setValue(event.target.value);\n//};\n\n/*\r\n\r\nFlags variable bool\r\n  return if bool = true then apply X code\r\n  state tracking on of the form fields\r\n\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"FortigateWhitelistToolFQDN\");","map":{"version":3,"sources":["C:/Users/landr/Dropbox/Requisite Designs's shared workspace/__Resources/_GameDevelopment/_Projects/ToolShed/src/components/FortigateWhitelistToolFQDN.js"],"names":["React","useState","Button","Modal","Link","parseConfig2","fqdnArray","fqdnList","split","ret","map","e","join","handleCopy","handleOutput","navigator","clipboard","writeText","console","log","FortigateWhitelistToolFQDN","showModal","setShow","handleClose","handleShow","setFqdnList","output","setOutput","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { Button, Modal } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\n//import ModalNew from './ModalNew'\r\n\r\nfunction parseConfig2(fqdnArray) {\r\n  var fqdnList = fqdnArray.split(\"\\n\")\r\n  //  var pushFQDN = [\"config webfilter urlfilter\\nedit 2\\nset name \\\"Environment_URL_Filter\\\"\\nconfig entries\\n\"];\r\n  var ret = fqdnList\r\n    .map((e) => {\r\n      return 'edit 0\\nset url \"' + e + '\"\\nset type wildcard\\nset action allow\\nnext\\n'\r\n    })\r\n    .join(\"\")\r\n  return 'config webfilter urlfilter\\nedit 2\\nset name \"Environment_URL_Filter\"\\nconfig entries\\n' + ret\r\n  //return fqdnList.join(\"block\");\r\n}\r\n\r\nfunction handleCopy(handleOutput) {\r\n  navigator.clipboard.writeText(handleOutput)\r\n  console.log(handleOutput)\r\n}\r\n\r\nfunction FortigateWhitelistToolFQDN() {\r\n  var [showModal, setShow] = useState(true)\r\n  var handleClose = () => setShow(false)\r\n  var handleShow = () => setShow(true)\r\n\r\n  var [fqdnList, setFqdnList] = useState(\"\")\r\n  var [output, setOutput] = useState(\"\")\r\n  var handleChange = (e) => {\r\n    setFqdnList(e.target.value)\r\n    setOutput(parseConfig2(fqdnList))\r\n  }\r\n\r\n  var handleOutput = (e) => {\r\n    setOutput(parseConfig2(fqdnList))\r\n  }\r\n\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <div>\r\n        <h1 className=\"appTitle\">FortiWhiteList Config Gen</h1> <br />\r\n        <p className=\"subTitle\">This tool will generate the configuration input required to apply a new URL to an existing Fortigate Content Filter. Input a list of FQDN's on the left text area and the right will auto-populate with the template. You must drop down a line after each FQDN including the last one.</p>\r\n      </div>\r\n      <Button variant=\"info\" className=\"navLinks\" onClick={handleShow}>\r\n        <li>Whitelist</li>\r\n      </Button>\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Whitelist Config Generator</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <label>FQDN Input</label>\r\n              <textarea className=\"textFields\" value={fqdnList} onChange={handleChange}></textarea>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <label>Configuration Output</label>\r\n              <textarea className=\"textFields\" value={output} onChange={handleOutput}></textarea>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"info\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"info\" onClick={handleCopy}>\r\n            Copy to Clipboard\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"backButton\">\r\n        <Link to=\"/vendor/fortigate\">\r\n          <Button className=\"navLinks\" variant=\"info\">\r\n            <li>Back</li>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FortigateWhitelistToolFQDN\r\n\r\n/* \r\n\r\nAll document.getElementById's \r\n\r\n\r\n\r\n\r\n\r\n\r\n*/ //    var fqdnList = document.getElementById(\"configInput\").value.split(\"\\n\");\r\n//    var pushFQDN = [\"config webfilter urlfilter\\nedit 2\\nset name \\\"Environment_URL_Filter\\\"\\nconfig entries\\n\"];\r\n//    for (i = 0; i < fqdnList.length; i++) {\r\n//      var y = \"edit 0\\nset url \\\"\" + fqdnList[i] + \"\\\"\\nset type wildcard\\nset action allow\\nnext\\n\";\r\n//        pushFQDN.push(y);\r\n//    }\r\n//    document.getElementById(\"configOutput\").value = pushFQDN.join(\"\");\r\n\r\n//var fqdnInput = configInput.value;\r\n\r\n//const [value, setValue] = useState(props.name);\r\n\r\n//const handleChange = (event) => {\r\n//    setValue(event.target.value);\r\n//};\r\n\r\n/*\r\n\r\nFlags variable bool\r\n  return if bool = true then apply X code\r\n  state tracking on of the form fields\r\n\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}