{"ast":null,"code":"import _slicedToArray from\"C:/Users/landr/Dropbox/Requisite Designs's shared workspace/__Resources/_GameDevelopment/_Projects/ToolShed/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Button,Modal}from'react-bootstrap';import ClipboardCopy from'./ClipboardCopy';import{Link}from'react-router-dom';import GetMask from'./GetMask';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function parseConfig2(array){var y=array.split(\"\\n\");var z=[];var h=y.map(function(e){var mask2=GetMask(e);var subnet=e.split(\"/\");var t=\"config firewall address\\nedit \\\"\"+subnet[0]+\"-CustNet\\\"\\nset subnet \"+subnet[0]+\" \"+mask2+\"\\nset comment \\\"\"+subnet[0]+\"-CustNet\\\"\\nnext\\nend\\n\";z.push(\" \\\"\"+subnet[0]+\"-CustNet\\\"\");return t;});return h.join(\"\")+'config firewall addrgrp\\nedit \\\"CustList\\\"\\nappend member'+z.join(\"\")+\"\\nend\";}function FortigateIPObjects(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShow=_useState2[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){return setShow(true);};var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),fqdnList=_useState4[0],setFqdnList=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),output=_useState6[0],setOutput=_useState6[1];var handleChange=function handleChange(e){if(e.target.value){setFqdnList(e.target.value);setOutput(parseConfig2(e.target.value));}else{setOutput(\"\");setFqdnList(\"\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"appContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"appTitle\",children:\"IP Object & Group Tool\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{className:\"subTitle\",children:\"This tool will generate the configuration input required to create new IP objects and insert them to a group. Input a list of IP's on the left text area with CIDR and the right will auto-populate with the template. Each IP must be on a line of its own.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{variant:\"info\",className:\"navLinks\",onClick:handleShow,children:/*#__PURE__*/_jsx(\"li\",{children:\"IP Obj Generator\"})})]}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:handleClose,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"IP Object Generator\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"IP Input\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"textFields\",value:fqdnList,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Object Config\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"textFields\",value:output})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:handleClose,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{variant:\"info\",disabled:true,children:\"Copy to Clipboard\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"backButton\",children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",className:\"navLinks\",disabled:true,children:/*#__PURE__*/_jsx(\"li\",{children:\"Settings\"})}),/*#__PURE__*/_jsx(Link,{to:\"/vendor/fortigate\",children:/*#__PURE__*/_jsx(Button,{className:\"navLinks\",variant:\"info\",children:/*#__PURE__*/_jsx(\"li\",{children:\"Back\"})})})]})]});}export default FortigateIPObjects;","map":{"version":3,"sources":["C:/Users/landr/Dropbox/Requisite Designs's shared workspace/__Resources/_GameDevelopment/_Projects/ToolShed/src/components/FortigateIPObjects.js"],"names":["React","useState","Button","Modal","ClipboardCopy","Link","GetMask","parseConfig2","array","y","split","z","h","map","e","mask2","subnet","t","push","join","FortigateIPObjects","showModal","setShow","handleClose","handleShow","fqdnList","setFqdnList","output","setOutput","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Button, Modal} from 'react-bootstrap'\r\nimport ClipboardCopy from './ClipboardCopy'\r\nimport { Link } from 'react-router-dom'\r\nimport GetMask from './GetMask'\r\n\r\n\r\nfunction parseConfig2(array) {\r\n    var y = array.split(\"\\n\");\r\n    var z = [];\r\n    var h = y.map((e) => {\r\n      var mask2 = GetMask(e);\r\n      var subnet = e.split(\"/\");\r\n      var t = \"config firewall address\\nedit \\\"\" + subnet[0] + \"-CustNet\\\"\\nset subnet \" + subnet[0] + \" \" + mask2 + \"\\nset comment \\\"\" + subnet[0] + \"-CustNet\\\"\\nnext\\nend\\n\";\r\n      z.push(\" \\\"\" + subnet[0] + \"-CustNet\\\"\")\r\n      return t;\r\n    })\r\n    return h.join(\"\") + 'config firewall addrgrp\\nedit \\\"CustList\\\"\\nappend member' + z.join(\"\") + \"\\nend\";\r\n    }\r\n\r\n    \r\n  \r\n\r\nfunction FortigateIPObjects() {\r\n    var [showModal, setShow] = useState(true)\r\n    var handleClose = () => setShow(false)\r\n    var handleShow = () => setShow(true)\r\n    var [fqdnList, setFqdnList] = useState(\"\")\r\n    var [output, setOutput] = useState(\"\")  \r\n    \r\n    var handleChange = (e) => { \r\n        if (e.target.value) {\r\n          setFqdnList(e.target.value);\r\n          setOutput(parseConfig2(e.target.value));\r\n        } else {\r\n          setOutput(\"\");\r\n          setFqdnList(\"\");\r\n        }\r\n      }\r\n    \r\n    return (\r\n        <div className=\"appContainer\">\r\n        <div>\r\n          <h1 className=\"appTitle\">IP Object & Group Tool</h1> <br />\r\n          <p className=\"subTitle\">This tool will generate the configuration input required to create new IP objects and insert them to a group. Input a list of IP's on the left text area with CIDR and the right will auto-populate with the template. Each IP must be on a line of its own.</p>\r\n          <br />\r\n          <Button variant=\"info\" className=\"navLinks\" onClick={handleShow}>\r\n            <li>IP Obj Generator</li>\r\n          </Button>\r\n        </div>\r\n  \r\n        <Modal show={showModal} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>IP Object Generator</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <label>IP Input</label>\r\n                <textarea className=\"textFields\" value={fqdnList} onChange={handleChange}></textarea>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label>Object Config</label>\r\n                <textarea className=\"textFields\" value={output}></textarea>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"info\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"info\" disabled>\r\n              Copy to Clipboard\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div className=\"backButton\">\r\n            <Button variant=\"secondary\" className=\"navLinks\" disabled>\r\n              <li>Settings</li>\r\n            </Button>\r\n          <Link to=\"/vendor/fortigate\">\r\n            <Button className=\"navLinks\" variant=\"info\">\r\n              <li>Back</li>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FortigateIPObjects;"]},"metadata":{},"sourceType":"module"}