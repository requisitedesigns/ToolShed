[{"C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\index.js":"1","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\App.js":"2","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\FortigateWhitelistToolFQDN.js":"3","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\Fortigate.js":"4","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\Navbar.js":"5","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\FortigateFWRule.js":"6","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\Cisco.js":"7","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\CiscoStaticRoute.js":"8","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\ClipboardCopy.js":"9","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\FortigateIPObjects.js":"10","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\GetMask.js":"11"},{"size":1334,"mtime":1648535054394,"results":"12","hashOfConfig":"13"},{"size":701,"mtime":1646336188680,"results":"14","hashOfConfig":"13"},{"size":3040,"mtime":1648740533465,"results":"15","hashOfConfig":"13"},{"size":2240,"mtime":1648740889165,"results":"16","hashOfConfig":"13"},{"size":1347,"mtime":1648740842640,"results":"17","hashOfConfig":"13"},{"size":15215,"mtime":1648535054390,"results":"18","hashOfConfig":"13"},{"size":2105,"mtime":1648535054388,"results":"19","hashOfConfig":"13"},{"size":3195,"mtime":1648535054388,"results":"20","hashOfConfig":"13"},{"size":170,"mtime":1648490145429,"results":"21","hashOfConfig":"13"},{"size":3255,"mtime":1648740726828,"results":"22","hashOfConfig":"13"},{"size":2156,"mtime":1648740627105,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1ofray4",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\index.js",[],[],["65","66"],"C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\App.js",[],[],"C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\FortigateWhitelistToolFQDN.js",["67","68"],[],"import React, { useState } from \"react\"\r\nimport { Button, Modal } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ClipboardCopy from './ClipboardCopy'\r\n\r\nfunction parseConfig2(fqdnArray) {\r\n  var fqdnList = fqdnArray.split(\"\\n\")\r\n  var ret = fqdnList\r\n    .map((e) => {\r\n      return 'edit 0\\nset url \"' + e + '\"\\nset type wildcard\\nset action allow\\nnext\\n'\r\n    })\r\n    .join(\"\")\r\n  return 'config webfilter urlfilter\\nedit 2\\nset name \"Environment_URL_Filter\"\\nconfig entries\\n' + ret + \"end\"\r\n  \r\n}\r\n\r\nfunction FortigateWhitelistToolFQDN() {\r\n  var [showModal, setShow] = useState(true)\r\n  var handleClose = () => setShow(false)\r\n  var handleShow = () => setShow(true)\r\n  var handleShowSettings = () => setShow(true)\r\n  var [fqdnList, setFqdnList] = useState(\"\")\r\n  var [output, setOutput] = useState(\"\")\r\n  \r\n  var handleChange = (e) => { \r\n    if (e.target.value) {\r\n      setFqdnList(e.target.value);\r\n      setOutput(parseConfig2(e.target.value));\r\n    } else {\r\n      setOutput(\"\");\r\n      setFqdnList(\"\");\r\n    }\r\n  }\r\n\r\n  \r\n  var handleOutput = (e) => {\r\n    // setOutput(parseConfig2(fqdnList))\r\n  }\r\n\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <div>\r\n        <h1 className=\"appTitle\">WhiteListing Tool</h1> <br />\r\n        <p className=\"subTitle\">This tool will generate the configuration input required to apply a new URL to an existing Fortigate Content Filter. Input a list of FQDN's on the left text area and the right will auto-populate with the template. Each FQDN must be on a line of its own.</p>\r\n        <br />\r\n        <Button variant=\"info\" className=\"navLinks\" onClick={handleShow}>\r\n          <li>Whitelist</li>\r\n        </Button>\r\n      </div>\r\n\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Whitelist Config Generator</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <label>FQDN Input</label>\r\n              <textarea className=\"textFields\" value={fqdnList} onChange={handleChange}></textarea>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <label>Configuration</label>\r\n              <textarea className=\"textFields\" value={output} onChange={handleOutput}></textarea>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"info\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"info\" disabled>\r\n            Copy to Clipboard\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"backButton\">\r\n          <Button variant=\"secondary\" className=\"navLinks\" disabled>\r\n            <li>Settings</li>\r\n          </Button>\r\n        <Link to=\"/vendor/fortigate\">\r\n          <Button className=\"navLinks\" variant=\"info\">\r\n            <li>Back</li>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FortigateWhitelistToolFQDN\r\n",["69","70"],"C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\Fortigate.js",[],[],"C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\Navbar.js",["71"],[],"import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport Me from '../imgs/Me.jpg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Navbar() {\r\n    return (  \r\n        <>\r\n        <div className=\"appContainer\">\r\n            <div id=\"logoCol\">\r\n                <logo className=\"logo-main\">\r\n                    <h1 className=\"appTitle\">ToolShed</h1>\r\n                    <p className=\"subTitle\">A Networking Resource</p>\r\n                    <p className=\"subTitle\">created by</p>\r\n                    <img src={Me} className=\"logoImg\"></img>\r\n                </logo>\r\n            </div>\r\n            <div id=\"navCol\">\r\n                <h2 id=\"vendorChoice\" className=\"appTitle\">Choose Your Vendor:</h2>\r\n                <ul>\r\n                    <Button className=\"navLinks\" variant=\"secondary\" disabled><li>Juniper</li></Button>\r\n                    <Link to=\"/vendor/fortigate\"><Button className=\"navLinks\" variant=\"info\"><li>Fortigate</li></Button></Link>\r\n                </ul>\r\n                <ul>    \r\n                    <Button className=\"navLinks\" variant=\"secondary\" disabled><li>Cisco</li></Button>\r\n                    <Button className=\"navLinks\" variant=\"secondary\" disabled><li>Palo Alto</li></Button> \r\n                </ul>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\FortigateFWRule.js",["72","73","74"],[],"import React, { useState } from \"react\"\r\nimport { Button, Modal } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction handleCopy(textArea) {\r\n  navigator.clipboard.writeText(textArea)\r\n}\r\n\r\nfunction FortigateFWRule() {\r\n  /* State Controls */\r\n  var [showModal, setShow] = useState(true)\r\n  var handleClose = () => setShow(false)\r\n  var handleShow = () => setShow(true)\r\n  var handleShowSettings = () => setShow(true)\r\n\r\n  var [state, setState] = useState({\r\n    portCreationReq: \"\",\r\n    protocolList: \"undefined\",\r\n    existingPorts: \"\",\r\n    addServiceGroup: \"undefined\",\r\n    portsList: \"\",\r\n    multiVdomQuestion: \"undefined\",\r\n    fwRuleName: \"\",\r\n    allowOrDeny: \"\",\r\n    srcIntfName: \"\",\r\n    dstIntfName: \"\",\r\n    newSrcObjReq: \"\",\r\n    extSrcObjList: \"\",\r\n    newSrcObjList: \"\",\r\n    newSrcObjGrpReq: \"\",\r\n    newDstObjReq: \"\",\r\n    newDestIpList: \"\",\r\n    extDestIpList: \"\",\r\n    newDstObjGrpReq: \"\",\r\n    ruleEnabled: \"\",\r\n    ruleDescription: \"\",\r\n  })\r\n\r\n  var handleChange = (e) => {\r\n    var value = e.target.value\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value,\r\n    })\r\n  }\r\n  /* End State Controls */\r\n\r\n  return (\r\n    <div id=\"fortigateFWrule\" className=\"appContainer\">\r\n      <div>\r\n        <h1 className=\"appTitle\">FW Rule Generator</h1> <br />\r\n        <p className=\"subTitle\">This tool will generate the configuration necessary for Fortigate Firewall Policy creation. This will create a policy based on the variables provided in \"Settings\". </p>\r\n        <br />\r\n        <Button variant=\"info\" className=\"navLinks\" onClick={handleShow}>\r\n          <li>FW Rule Gen</li>\r\n        </Button>\r\n      </div>\r\n\r\n      <Modal id=\"fwRuleModal\" show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>FW Rule Generator</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <form id=\"fwRuleForm\">\r\n              <label>\r\n                <span style={{textDecoration: 'underline', fontSize: '1.2em',}}>FW Policy</span> \r\n              </label>\r\n              <label>\r\n                Will this be a multi-VDOM policy?\r\n                <select name=\"multiVdomQuestion\" value={state.multiVdomQuestion} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"multiVdomYes\">Yes</option>\r\n                  <option value=\"multiVdomNo\">No</option>\r\n                </select>\r\n              </label>\r\n\r\n            {(state.multiVdomQuestion === 'multiVdomYes' &&\r\n                    <>\r\n                    <label name=\"vdomTotal\">\r\n                      Please advise the total number of VDOMs required for the new policy.<input name=\"vdomTotal\" onChange={handleChange} value={state.vdomTotal} type=\"text\" placeholder=\"Example: 35\"></input>\r\n                    </label>\r\n                    <label name=\"vdomName\">\r\n                      VDOM Name:<input name=\"vdomName\" type=\"text\" placeholder=\"Example: Customer-VDOM-355\"></input>\r\n                    </label>\r\n                    </> \r\n                  ) || (<></>)}\r\n            {(state.multiVdomQuestion !== 'undefined' &&               \r\n              <label name=\"fwRuleName\">\r\n                Firewall Policy Name:<input name=\"fwRuleName\" type=\"text\" value={state.fwRuleName} onChange={handleChange} placeholder=\"Example: Windows-Update-Service\"></input>\r\n              </label>\r\n              ) || (<></>)}\r\n\r\n            {( state.fwRuleName !== '' && \r\n              <label name=\"allowOrDeny\">\r\n                  Please advise if this is to allow or deny traffic.\r\n                <select name=\"allowOrDeny\" value={state.allowOrDeny} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"allowRule\">Allow</option>\r\n                  <option value=\"denyRule\">Deny</option>\r\n                </select>\r\n              </label>\r\n            ) || (<></>)}\r\n            \r\n            {(state.allowOrDeny !== '' && \r\n                <label name=\"portCreationReqL\">\r\n                Do you require a new custom service port or port group?\r\n                <select name=\"portCreationReq\" value={state.portCreationReq} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>\r\n            ) || (<></>)}\r\n\r\n              \r\n             { (state.portCreationReq === 'false' &&                   \r\n              <label name=\"existingPortsL\">\r\n                Please provide the name of the service group or port name you want to use:<input name=\"existingPorts\" type=\"text\" placeholder=\"Example: WSUS-Ports\" value={state.existingPorts} onChange={handleChange}></input>\r\n              </label> )\r\n              \r\n              ||\r\n            \r\n              (state.portCreationReq === 'true' &&\r\n                  <label name=\"protocolListL\">\r\n                    TCP, UDP, or Both?\r\n                    <select name=\"protocolList\" value={state.protocolList} onChange={handleChange}>\r\n                      <option value=\"undefined\">-- Please Choose</option>\r\n                      <option value=\"tcpTrue\">TCP</option>\r\n                      <option value=\"udpTrue\">UDP</option>\r\n                      <option value=\"bothTrue\">Both</option>\r\n                      <option value=\"mixedTrue\">Mixed</option>\r\n                    </select>\r\n                  </label> )\r\n                || ( <></> )}\r\n\r\n                {(state.protocolList !== 'undefined' &&                  \r\n                <label name=\"addServiceGroupL\">\r\n                  Would you like these ports to be added to a Service Group or as one individual service?\r\n                    <select name=\"addServiceGroup\" value={state.addServiceGroup} onChange={handleChange}>\r\n                      <option value=\"undefined\">-- Please Choose</option>\r\n                      <option value=\"srvGrpYes\">Group</option>\r\n                      <option value=\"srvGrpNo\">Individual</option>\r\n                    </select>\r\n                  </label>) || (<></>)}\r\n\r\n                {(state.addServiceGroup !== 'undefined' && \r\n                <label name=\"portsListL\">\r\n                    Comma Separated Ports, Hyphen for Range:<input name=\"portsList\" value={state.portsList} onChange={handleChange} type=\"text\" placeholder=\"Example: 1550, 1650, 1300-1301, 20\">\r\n                    </input>\r\n                </label> ) || (<></>)}\r\n                  \r\n              {(state.portCreationReq !== '' && \r\n                  <label name=\"srcIntfNameL\">\r\n                    What is the Source Interface Name? (srcintf):<input value={state.srcIntfName} onChange={handleChange} name=\"srcIntfName\" type=\"text\" placeholder=\"Example: Inside_Vlan\"></input>\r\n                  </label>            \r\n              ) || (<></>)} \r\n              {(state.srcIntfName !== '' && \r\n                  <label name=\"dstIntfNameL\">\r\n                    What is the Destination Interface Name? (dstintf):<input value={state.dstIntfName} onChange={handleChange} name=\"dstIntfName\" type=\"text\" placeholder=\"Example: Outside_Vlan\"></input>\r\n                  </label>            \r\n              ) || (<></>)}            \r\n              {(state.dstIntfName !== '' &&\r\n                <label name=\"newSrcObjReqL\">\r\n                  Do you require new Source IP Objects?\r\n                <select name=\"newSrcObjReq\" value={state.newSrcObjReq} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"srcYes\">Yes</option>\r\n                  <option value=\"srcNo\">No</option>\r\n                </select>\r\n                </label>            \r\n              ) || (<></>)}\r\n              {(state.newSrcObjReq === 'srcNo' && \r\n                <label name=\"extSrcObjListL\">\r\n                  Please provide the name of the existing Source IP Object(s), Object-Groups (one per line w/quotes around them).\r\n                <textarea className=\"textFields\" value={state.extSrcObjList} onChange={handleChange} name=\"extSrcObjList\"></textarea>\r\n                </label>\r\n                            \r\n              ) || (state.newSrcObjReq === 'srcYes' && \r\n                <label name=\"newSrcObjListL\">\r\n                  Please provide the name of the new Source IP Object(s) (one per line w/quotes around them).\r\n                <textarea className=\"textFields\" value={state.newSrcObjList} onChange={handleChange} name=\"newSrcObjList\"></textarea>\r\n              </label>\r\n              ) }\r\n            {(state.newSrcObjReq === 'srcYes' && state.newSrcObjList !== '' && \r\n            <label name=\"newSrcObjGrpReqL\">\r\n              Would you like to create a new object group for the Source IPs?\r\n              <select name=\"newSrcObjGrpReq\" value={state.newSrcObjGrpReq} onChange={handleChange}>\r\n                <option value=\"undefined\">-- Please Choose</option>\r\n                <option value=\"true\">Yes</option>\r\n                <option value=\"false\">No</option>\r\n              </select>\r\n            </label>                    \r\n            )}\r\n              {(state.newSrcObjReq !== '' && \r\n              <label name=\"newDstObjReqL\">\r\n                Do you require new Destination IP Objects?\r\n                <select name=\"newDstObjReq\" value={state.newDstObjReq} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>            \r\n              )}\r\n              {(state.newDstObjReq === 'false' && \r\n              <label name=\"extDestIpListL\">\r\n                Please provide the name of the existing Destination IP Object(s), Object-Groups (one per line w/quotes around them)?\r\n                <textarea className=\"textFields\" value={state.extDestIpList} onChange={handleChange} name=\"extDestIpList\"></textarea>\r\n              </label>            \r\n              ) || (state.newDstObjReq === 'true' && \r\n              <label name=\"newDestIpListL\">\r\n                Please provide the name of the new Destination IP Object(s)(one per line w/quotes around them)?\r\n                <textarea className=\"textFields\" value={state.newDestIpList} onChange={handleChange} name=\"newDestIpList\"></textarea>\r\n              </label>                          \r\n              )}\r\n              {(state.newDestIpList !== '' && \r\n              <label name=\"newDstObjGrpReqL\">\r\n                Would you like to create a new object group for the Destination IPs?\r\n                <select name=\"newDstObjGrpReq\" value={state.newDestObjGrpReq} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>            \r\n              )}\r\n            {(state.newDestIpList !== '' || state.extDestIpList !== '' && \r\n              <label name=\"ruleEnabledL\">\r\n                Would you like the rule enabled upon entry?\r\n                <select name=\"ruleEnabled\" value={state.ruleEnabled} onChange={handleChange}>\r\n                  <option value=\"undefined\">-- Please Choose</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </select>\r\n              </label>          \r\n            )}              \r\n            {(state.ruleEnabled !== '' && \r\n              <label name=\"ruleDescriptionL\">\r\n                Please provide a description of the rule under 28 characters:<input name=\"ruleDescription\" value={state.ruleDescription} onChange={handleChange} type=\"text\" placeholder=\"Example: WSUS Inside_Vlan to Outside_Vlan\"></input>\r\n              </label>          \r\n            )}              \r\n            {(state.ruleDescription !== '' && \r\n            <button className=\"info\" style={{ width: '50%', backgroundColor: 'orange', color: 'black',}}>Submit</button>\r\n            )}\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"info\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"info\" onClick={handleCopy(\"\")}>\r\n            Copy to Clipboard\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div id=\"backButton\" className=\"backButton\">\r\n          <Button variant=\"secondary\" className=\"navLinks\" disabled>\r\n            <li>Settings</li>\r\n          </Button>\r\n        <Link to=\"/vendor/fortigate\">\r\n          <Button className=\"navLinks\" variant=\"info\">\r\n            <li>Back</li>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FortigateFWRule\r\n\r\n/* \r\n\r\nFeatures To Be Created:\r\n\r\n1. Create \"Settings\"\r\n    Create a settings button that allows the user to provide input that will reflect in the config output.\r\n\r\n2. Create a slider to push to multiple VDOMs\r\n\r\n3. onClick submit for final option in form\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n===== ORIGINAL CODE =====\r\n            <div class=\"col_2\">\r\n                <h2>Firewall Rule Skeleton</h2>\r\n                <button onclick=\"parseConfigFW()\">Create FW Rule</button>\r\n                <textarea id=\"fscRuleSkeleton\"></textarea>\r\n            </div>\r\n\r\n\r\n        function parseConfigFW() {\r\n\r\n            if (rulePortTCPUDP == \"TCP\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset tcp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else if (rulePortTCPUDP == \"UDP\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset udp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else if (rulePortTCPUDP == \"BOTH\") {\r\n                newPort = \"\\nconfig firewall service custom\\nedit \\\"\" + portName + \"\\\"\\nset comment \\\"\" + portName + \"\\\"\\nset udp-portrange \" + rulePortRange + \"\\nset tcp-portrange \" + rulePortRange + \"\\nend\";\r\n            } else {\r\n                newPort = prompt(\"Please enter TCP or UDP in caps only\");\r\n            }\r\n            for (a = 1; a < 37; a++) {\r\n                fscNumLoop = a;\r\n                var fwRule = \"edit vdom-000\" + (fscNumLoop < 10 ? \"0\" : \"\") + fscNumLoop + newPort + \"\\nconfig firewall policy\\n\";\r\n                fwRule = fwRule + \"edit 0\\nset name \\\"\" + ruleName + \"\\\"\\nset srcintf \\\"VDOM-INT\" + fscNumLoop + \"_01\\\"\\nset dstintf \\\"A_Zone\\\" \\\"B_Zone\\\"\\nset srcaddr \\\"all\\\"\\nset dstaddr \\\"all-2\\\"\\nset action accept\\nset schedule \\\"always\\\"\\nset service \\\"\" + portName + \"\\\"\\nset utm-status enable\\nset status enable\\nset comments \\\"\" + ruleName + \"\\\"\\nend\";\r\n                console.log(\"fwRule = \" + fwRule);\r\n                pushOutputFWSkeleton.push(fwRule);\r\n            }\r\n            document.getElementById(\"fscRuleSkeleton\").value = pushOutputFWSkeleton.join(\"\\nnext\\n\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\Cisco.js",[],[],"C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\CiscoStaticRoute.js",[],[],"C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\ClipboardCopy.js",["75"],[],"import React from 'react';\r\n\r\n\r\nfunction ClipboardCopy (textCopy) {\r\n  return (  \r\n      navigator.clipboard.writeText(textCopy)\r\n  );\r\n}\r\n\r\nexport default ClipboardCopy;","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\FortigateIPObjects.js",["76","77","78"],[],"import React, {useState} from 'react'\r\nimport {Button, Modal} from 'react-bootstrap'\r\nimport ClipboardCopy from './ClipboardCopy'\r\nimport { Link } from 'react-router-dom'\r\nimport GetMask from './GetMask'\r\n\r\n\r\nfunction parseConfig2(array) {\r\n    var y = array.split(\"\\n\");\r\n    var z = [];\r\n    var h = y.map((e) => {\r\n      var mask2 = GetMask(e);\r\n      var subnet = e.split(\"/\");\r\n      var t = \"config firewall address\\nedit \\\"\" + subnet[0] + \"-CustNet\\\"\\nset subnet \" + subnet[0] + \" \" + mask2 + \"\\nset comment \\\"\" + subnet[0] + \"-CustNet\\\"\\nnext\\nend\\n\";\r\n      z.push(\" \\\"\" + subnet[0] + \"-CustNet\\\"\")\r\n      return t;\r\n    })\r\n    return h.join(\"\") + 'config firewall addrgrp\\nedit \\\"CustList\\\"\\nappend member' + z.join(\"\") + \"\\nend\";\r\n    }\r\n\r\n    \r\n  \r\n\r\nfunction FortigateIPObjects() {\r\n    var [showModal, setShow] = useState(true)\r\n    var handleClose = () => setShow(false)\r\n    var handleShow = () => setShow(true)\r\n    var [fqdnList, setFqdnList] = useState(\"\")\r\n    var [output, setOutput] = useState(\"\")  \r\n    \r\n    var handleChange = (e) => { \r\n        if (e.target.value) {\r\n          setFqdnList(e.target.value);\r\n          setOutput(parseConfig2(e.target.value));\r\n        } else {\r\n          setOutput(\"\");\r\n          setFqdnList(\"\");\r\n        }\r\n      }\r\n    \r\n    return (\r\n        <div className=\"appContainer\">\r\n        <div>\r\n          <h1 className=\"appTitle\">IP Object & Group Tool</h1> <br />\r\n          <p className=\"subTitle\">This tool will generate the configuration input required to create new IP objects and insert them to a group. Input a list of IP's on the left text area with CIDR and the right will auto-populate with the template. Each IP must be on a line of its own.</p>\r\n          <br />\r\n          <Button variant=\"info\" className=\"navLinks\" onClick={handleShow}>\r\n            <li>IP Obj Generator</li>\r\n          </Button>\r\n        </div>\r\n  \r\n        <Modal show={showModal} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>IP Object Generator</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <label>IP Input</label>\r\n                <textarea className=\"textFields\" value={fqdnList} onChange={handleChange}></textarea>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label>Object Config</label>\r\n                <textarea className=\"textFields\" value={output}></textarea>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"info\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"info\" disabled>\r\n              Copy to Clipboard\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div className=\"backButton\">\r\n            <Button variant=\"secondary\" className=\"navLinks\" disabled>\r\n              <li>Settings</li>\r\n            </Button>\r\n          <Link to=\"/vendor/fortigate\">\r\n            <Button className=\"navLinks\" variant=\"info\">\r\n              <li>Back</li>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FortigateIPObjects;","C:\\Users\\landr\\Dropbox\\Requisite Designs's shared workspace\\__Resources\\_GameDevelopment\\_Projects\\ToolShed\\src\\components\\GetMask.js",["79"],[],"import React from 'react';\r\n\r\nfunction GetMask(list) {\r\n  var x = list.split('/');  \r\n    var mask2 = \"0\";\r\n    switch (x[1]) {\r\n      case \"8\":\r\n        mask2 = \"255.0.0.0\";\r\n        break;\r\n      case \"9\":\r\n        mask2 = \"255.128.0.0\";\r\n        break;\r\n      case \"10\":\r\n        mask2 = \"255.192.0.0\";\r\n        break;\r\n        case \"11\":\r\n          mask2 = \"255.224.0.0\";\r\n          break;\r\n        case \"12\":\r\n          mask2 = \"255.240.0.0\";\r\n          break;\r\n        case \"13\":\r\n          mask2 = \"255.248.0.0\";\r\n          break;\r\n        case \"14\":\r\n          mask2 = \"255.252.0.0\";\r\n          break;\r\n        case \"15\":\r\n          mask2 = \"255.254.0.0\";\r\n            break;\r\n        case \"16\":\r\n            mask2 = \"255.255.0.0\";\r\n            break;\r\n        case \"17\":\r\n            mask2 = \"255.255.128.0\";\r\n            break;\r\n        case \"18\":\r\n            mask2 = \"255.255.192.0\";\r\n            break;\r\n        case \"19\":\r\n            mask2 = \"255.255.224.0\";\r\n            break;\r\n        case \"20\":\r\n            mask2 = \"255.255.240.0\";\r\n            break;\r\n        case \"21\":\r\n            mask2 = \"255.255.248.0\";\r\n            break;\r\n        case \"22\":\r\n            mask2 = \"255.255.252.0\";\r\n            break;\r\n        case \"23\":\r\n            mask2 = \"255.255.254.0\";\r\n            break;\r\n        case \"24\":\r\n            mask2 = \"255.255.255.0\";\r\n            break;\r\n        case \"25\":\r\n            mask2 = \"255.255.255.128\";\r\n            break;\r\n        case \"26\":\r\n            mask2 = \"255.255.255.192\";\r\n            break;\r\n        case \"27\":\r\n            mask2 = \"255.255.255.224\";\r\n            break;\r\n        case \"28\":\r\n            mask2 = \"255.255.255.240\";\r\n            break;\r\n        case \"29\":\r\n            mask2 = \"255.255.255.248\";\r\n            break;\r\n        case \"30\":\r\n            mask2 = \"255.255.255.252\";\r\n            break;\r\n        case \"31\":\r\n            mask2 = \"255.255.255.254\";\r\n            break;\r\n        case \"32\":\r\n            mask2 = \"255.255.255.255\";\r\n            break;\r\n        default:\r\n            mask2 = \"255.255.255.255\"\r\n            break;\r\n    }\r\n    return mask2;\r\n}\r\n\r\nexport default GetMask;",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":21},{"ruleId":"84","severity":1,"message":"88","line":21,"column":7,"nodeType":"86","messageId":"87","endLine":21,"endColumn":25},{"ruleId":"80","replacedBy":"89"},{"ruleId":"82","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":16,"column":21,"nodeType":"93","endLine":16,"endColumn":55},{"ruleId":"84","severity":1,"message":"88","line":14,"column":7,"nodeType":"86","messageId":"87","endLine":14,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":226,"column":42,"nodeType":"96","messageId":"97","endLine":226,"endColumn":44},{"ruleId":"94","severity":1,"message":"95","line":226,"column":72,"nodeType":"96","messageId":"97","endLine":226,"endColumn":74},{"ruleId":"84","severity":1,"message":"98","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":18,"column":56,"nodeType":"101","messageId":"102","endLine":18,"endColumn":57,"suggestions":"103"},{"ruleId":"99","severity":1,"message":"100","line":18,"column":66,"nodeType":"101","messageId":"102","endLine":18,"endColumn":67,"suggestions":"104"},{"ruleId":"84","severity":1,"message":"98","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'ClipboardCopy' is defined but never used.","Identifier","unusedVar","'handleShowSettings' is assigned a value but never used.",["105"],["106"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["107","108"],["109","110"],"no-global-assign","no-unsafe-negation",{"messageId":"111","fix":"112","desc":"113"},{"messageId":"114","fix":"115","desc":"116"},{"messageId":"111","fix":"117","desc":"113"},{"messageId":"114","fix":"118","desc":"116"},"removeEscape",{"range":"119","text":"120"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"121","text":"122"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"123","text":"120"},{"range":"124","text":"122"},[689,690],"",[689,689],"\\",[699,700],[699,699]]